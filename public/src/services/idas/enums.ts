// Code generated by idas. DO NOT EDIT.

export enum AuthMethod {
  signature = 1,
  token = 2,
  token_signature = 3,
  basic = 0,
}

export type AuthMethodName = 'token' | 'token_signature' | 'basic' | 'signature';

export type AuthMethodValue = 0 | 1 | 2 | 3;

export enum AppStatus {
  unknown = 0,
  normal = 1,
  disable = 2,
}

export type AppStatusName = 'unknown' | 'normal' | 'disable';

export type AppStatusValue = 2 | 0 | 1;

export enum GrantType {
  authorization_code = 1,
  implicit = 2,
  password = 4,
  client_credentials = 8,
  proxy = 16,
  oidc = 32,
  radius = 64,
  none = 0,
}

export type GrantTypeName =
  | 'implicit'
  | 'password'
  | 'client_credentials'
  | 'proxy'
  | 'oidc'
  | 'radius'
  | 'none'
  | 'authorization_code';

export type GrantTypeValue = 2 | 4 | 8 | 16 | 32 | 64 | 0 | 1;

export enum GrantMode {
  manual = 0,
  full = 1,
}

export type GrantModeName = 'manual' | 'full';

export type GrantModeValue = 0 | 1;

export enum RoleType {
  user = 0,
  system = 1,
}

export type RoleTypeName = 'user' | 'system';

export type RoleTypeValue = 0 | 1;

export enum UserStatus {
  normal = 0,
  disabled = 1,
  user_inactive = 2,
  password_expired = 4,
}

export type UserStatusName = 'normal' | 'disabled' | 'user_inactive' | 'password_expired';

export type UserStatusValue = 4 | 0 | 1 | 2;

export enum PageFieldType {
  date = 11,
  textarea = 2,
  radio = 6,
  select = 8,
  timeRange = 10,
  digit = 3,
  checkbox = 5,
  multiSelect = 9,
  dateTimeRange = 14,
  text = 0,
  switch = 7,
  dateTime = 13,
  digitRange = 4,
  dateRange = 12,
}

export type PageFieldTypeName =
  | 'checkbox'
  | 'multiSelect'
  | 'dateTimeRange'
  | 'digit'
  | 'switch'
  | 'dateTime'
  | 'text'
  | 'dateRange'
  | 'digitRange'
  | 'radio'
  | 'select'
  | 'timeRange'
  | 'date'
  | 'textarea';

export type PageFieldTypeValue = 0 | 7 | 13 | 4 | 12 | 2 | 6 | 8 | 10 | 11 | 3 | 5 | 9 | 14;

export enum PageStatus {
  disabled = 1,
  enabled = 2,
  all = 0,
}

export type PageStatusName = 'all' | 'disabled' | 'enabled';

export type PageStatusValue = 2 | 0 | 1;

export enum PasswordComplexity {
  very_safe = 3,
  unsafe = 0,
  general = 1,
  safe = 2,
}

export type PasswordComplexityName = 'unsafe' | 'general' | 'safe' | 'very_safe';

export type PasswordComplexityValue = 2 | 3 | 0 | 1;

export enum OAuthGrantType {
  password = 2,
  client_credentials = 3,
  refresh_token = 0,
  authorization_code = 1,
}

export type OAuthGrantTypeName =
  | 'refresh_token'
  | 'authorization_code'
  | 'password'
  | 'client_credentials';

export type OAuthGrantTypeValue = 0 | 1 | 2 | 3;

export enum ResponseType {
  default = 0,
  code = 1,
  token = 2,
}

export type ResponseTypeName = 'default' | 'code' | 'token';

export type ResponseTypeValue = 0 | 1 | 2;

export enum LoginType {
  oauth2 = 6,
  enable_mfa_totp = 10,
  enable_mfa_email = 11,
  mfa_totp = 1,
  email = 4,
  mfa_sms = 3,
  sms = 5,
  enable_mfa_sms = 12,
  normal = 0,
  mfa_email = 2,
}

export type LoginTypeName =
  | 'email'
  | 'oauth2'
  | 'enable_mfa_totp'
  | 'enable_mfa_email'
  | 'mfa_totp'
  | 'mfa_email'
  | 'mfa_sms'
  | 'sms'
  | 'enable_mfa_sms'
  | 'normal';

export type LoginTypeValue = 0 | 2 | 3 | 5 | 12 | 1 | 4 | 6 | 10 | 11;
