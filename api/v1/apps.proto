syntax = "proto3";
package idas.endpoint;
import public "gogoproto/gogo.proto";
import "v1/base.proto";
import "types/models.proto";
option go_package = "github.com/MicroOps-cn/idas/pkg/endpoint;endpoint";





message AppInfo{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string name = 2[(gogoproto.jsontag) = "name", (gogoproto.moretags) = 'valid:"required"'];
  string description = 3;
  string storage = 4[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
  string avatar = 5;
  idas.service.models.AppMeta.GrantType grant_type = 6[(gogoproto.jsontag) = "grantType"];
  idas.service.models.AppMeta.GrantMode grant_mode = 7[(gogoproto.jsontag) = "grantMode"];
  idas.service.models.AppMeta.Status status = 8[(gogoproto.jsontag) = "status"];
  string update_time = 12[(gogoproto.jsontag) = "updateTime", (gogoproto.moretags) = 'valid:"required"'];
  string create_time = 13[(gogoproto.jsontag) = "createTime", (gogoproto.moretags) = 'valid:"required"'];
  bool is_delete = 14[(gogoproto.jsontag) = "isDelete", (gogoproto.moretags) = 'valid:"required"'];
  repeated  AppUser user = 15;
  repeated  AppRole role = 16;
}

message GetAppRequest{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string storage = 2[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
}

message DeleteAppRequest{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string storage = 2[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
}

message GetAppsRequest{
  idas.endpoint.BaseListRequest base_list_request = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
  string storage = 2;
}
message GetAppsResponse{
  idas.endpoint.BaseListResponse base_list_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
  repeated AppInfo data = 2;
}

message GetAppResponse{
  idas.endpoint.BaseResponse base_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
  AppInfo data = 2;
}

message PatchAppRequest{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string storage = 2[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
  string description = 3[(gogoproto.customtype) = "string"];
  string name = 4[(gogoproto.customtype) = "string"];
  string avatar = 5[(gogoproto.customtype) = "string"];
  idas.service.models.AppMeta.GrantType grant_type = 6[(gogoproto.jsontag) = "grantType,omitempty",(gogoproto.customtype) = "github.com/MicroOps-cn/idas/pkg/service/models.AppMeta_GrantType"];
  idas.service.models.AppMeta.GrantMode grant_mode = 7 [(gogoproto.jsontag) = "grantMode,omitempty",(gogoproto.customtype) = "github.com/MicroOps-cn/idas/pkg/service/models.AppMeta_GrantType"];
  idas.service.models.AppMeta.Status status = 8[(gogoproto.customtype) = "github.com/MicroOps-cn/idas/pkg/service/models.AppMeta_Status"];
  bool is_delete = 14[(gogoproto.customtype) = "bool",(gogoproto.jsontag) = "isDelete,omitempty"];
}

message PatchAppResponse{
  idas.endpoint.BaseResponse base_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message PatchAppsResponse{
  idas.endpoint.BaseTotalResponse base_total_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
}

message AppSourceType{
}

message GetAppSourceResponse{
  idas.endpoint.BaseTotalResponse base_total_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
  AppSourceType data = 8[(gogoproto.customtype) = "map[string]string", (gogoproto.nullable) = false];
}

message AppUser{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string role_id = 2[(gogoproto.jsontag) = "roleId,omitempty"];
  string role = 3;
}

message AppRole{
  string id = 1;
  string name = 2;
  string config = 3;
  bool is_default = 4[(gogoproto.jsontag) = "isDefault,omitempty"];
}

message CreateAppRequest{
  string storage = 2[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
  string description = 3;
  string name = 4[(gogoproto.jsontag) = "name", (gogoproto.moretags) = 'valid:"required"'];
  string avatar = 5;
  idas.service.models.AppMeta.GrantType grant_type = 6[(gogoproto.jsontag) = "grantType,omitempty"];
  idas.service.models.AppMeta.GrantMode grant_mode = 7[(gogoproto.jsontag) = "grantMode,omitempty"];
  repeated  AppUser user = 8;
  repeated  AppRole role = 9;
}

message UpdateAppRequest{
  string id = 1[(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'valid:"required"'];
  string storage = 2[(gogoproto.jsontag) = "storage", (gogoproto.moretags) = 'valid:"required"'];
  string description = 3;
  string name = 4[(gogoproto.jsontag) = "name", (gogoproto.moretags) = 'valid:"required"'];
  string avatar = 5;
  idas.service.models.AppMeta.GrantType grant_type = 6[(gogoproto.jsontag) = "grantType,omitempty"];
  idas.service.models.AppMeta.GrantMode grant_mode = 7[(gogoproto.jsontag) = "grantMode,omitempty"];
  repeated  AppUser user = 8;
  repeated  AppRole role = 9;
  idas.service.models.AppMeta.Status status = 10[(gogoproto.jsontag) = "status"];
  bool is_delete = 11[(gogoproto.jsontag) = "isDelete,omitempty"];
}

message UpdateAppResponse{
  idas.endpoint.BaseResponse base_response = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",omitempty"];
  AppInfo data = 2;
}