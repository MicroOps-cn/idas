syntax = "proto3";
package idas.endpoint;
import public "gogoproto/gogo.proto";
import "v1/base.proto";
import "types/models.proto";
option go_package = "idas/pkg/endpoint;endpoint";

message GetSessionsRequest{
  idas.endpoint.BaseListRequest BaseListRequest = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false];
  string userId = 2[(gogoproto.moretags) = 'valid:"required"'];
}

message SessionInfo{
  string id = 1[(gogoproto.jsontag) = "id",(gogoproto.moretags)='valid:"required"'];
  string createTime = 2[(gogoproto.jsontag) = "createTime",(gogoproto.moretags)='valid:"required"'];
  string expiry = 3[(gogoproto.jsontag) = "expiry",(gogoproto.moretags)='valid:"required"'];
  string lastSeen = 4;
}

message GetSessionsResponse{
  idas.endpoint.BaseListRequest BaseListResponse = 1[(gogoproto.embed) = true, (gogoproto.nullable) = false];
  repeated SessionInfo data = 2;
}

message DeleteSessionRequest{
  string id = 1[(gogoproto.jsontag) = "id",(gogoproto.moretags)='valid:"required"'];
}

message AuthenticationRequest{
  string username = 1;
  string password = 2;
  idas.service.models.AuthMeta.Method authMethod = 3;
  string authAlgorithm = 4[(gogoproto.customtype) = "idas/pkg/service/models.AuthAlgorithm", (gogoproto.nullable) = false];
  string authKey = 5;
  string authSecret = 6;
  string authSign = 7;
  string payload = 8[(gogoproto.jsontag) = "-"];
}


message UserLoginRequest{
  string username = 1[(gogoproto.jsontag) = "username", (gogoproto.moretags) = 'valid:"required"'];
  string password = 2[(gogoproto.jsontag) = "password", (gogoproto.moretags) = 'valid:"required"'];
  bool autoLogin = 3;
  string type = 4;
}
