// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package config

import (
	fmt "fmt"
	github_com_MicroOps_cn_fuck_sets "github.com/MicroOps-cn/fuck/sets"
	_ "github.com/MicroOps-cn/idas/pkg/client/email"
	github_com_MicroOps_cn_idas_pkg_client_email "github.com/MicroOps-cn/idas/pkg/client/email"
	_ "github.com/MicroOps-cn/idas/pkg/client/geoip"
	github_com_MicroOps_cn_idas_pkg_client_geoip "github.com/MicroOps-cn/idas/pkg/client/geoip"
	_ "github.com/MicroOps-cn/idas/pkg/client/gorm"
	github_com_MicroOps_cn_idas_pkg_client_gorm "github.com/MicroOps-cn/idas/pkg/client/gorm"
	_ "github.com/MicroOps-cn/idas/pkg/client/ldap"
	github_com_MicroOps_cn_idas_pkg_client_ldap "github.com/MicroOps-cn/idas/pkg/client/ldap"
	oauth2 "github.com/MicroOps-cn/idas/pkg/client/oauth2"
	_ "github.com/MicroOps-cn/idas/pkg/client/redis"
	github_com_MicroOps_cn_idas_pkg_client_redis "github.com/MicroOps-cn/idas/pkg/client/redis"
	capacity "github.com/MicroOps-cn/idas/pkg/utils/capacity"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// @sync-to-public:public/src/services/idas/enums.ts:PasswordComplexity
type PasswordComplexity int32

const (
	PasswordComplexity_unsafe    PasswordComplexity = 0
	PasswordComplexity_general   PasswordComplexity = 1
	PasswordComplexity_safe      PasswordComplexity = 2
	PasswordComplexity_very_safe PasswordComplexity = 3
)

var PasswordComplexity_name = map[int32]string{
	0: "unsafe",
	1: "general",
	2: "safe",
	3: "very_safe",
}

var PasswordComplexity_value = map[string]int32{
	"unsafe":    0,
	"general":   1,
	"safe":      2,
	"very_safe": 3,
}

func (x PasswordComplexity) String() string {
	return proto.EnumName(PasswordComplexity_name, int32(x))
}

func (PasswordComplexity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

type StorageRef struct {
	Storage              *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageRef) Reset()         { *m = StorageRef{} }
func (m *StorageRef) String() string { return proto.CompactTextString(m) }
func (*StorageRef) ProtoMessage()    {}
func (*StorageRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}
func (m *StorageRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageRef.Unmarshal(m, b)
}
func (m *StorageRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageRef.Marshal(b, m, deterministic)
}
func (m *StorageRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageRef.Merge(m, src)
}
func (m *StorageRef) XXX_Size() int {
	return xxx_messageInfo_StorageRef.Size(m)
}
func (m *StorageRef) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageRef.DiscardUnknown(m)
}

var xxx_messageInfo_StorageRef proto.InternalMessageInfo

func (m *StorageRef) GetStorage() *Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *StorageRef) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageRef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Storage struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*Storage_Ref
	//	*Storage_Mysql
	//	*Storage_Redis
	//	*Storage_Ldap
	//	*Storage_Sqlite
	Source               isStorage_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}
func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

type isStorage_Source interface {
	isStorage_Source()
}

type Storage_Ref struct {
	Ref *StorageRef `protobuf:"bytes,10,opt,name=ref,proto3,oneof" json:"ref,omitempty"`
}
type Storage_Mysql struct {
	Mysql *github_com_MicroOps_cn_idas_pkg_client_gorm.MySQLClient `protobuf:"bytes,11,opt,name=mysql,proto3,oneof,customtype=github.com/MicroOps-cn/idas/pkg/client/gorm.MySQLClient" json:"mysql,omitempty"`
}
type Storage_Redis struct {
	Redis *github_com_MicroOps_cn_idas_pkg_client_redis.Client `protobuf:"bytes,12,opt,name=redis,proto3,oneof,customtype=github.com/MicroOps-cn/idas/pkg/client/redis.Client" json:"redis,omitempty"`
}
type Storage_Ldap struct {
	Ldap *github_com_MicroOps_cn_idas_pkg_client_ldap.Client `protobuf:"bytes,13,opt,name=ldap,proto3,oneof,customtype=github.com/MicroOps-cn/idas/pkg/client/ldap.Client" json:"ldap,omitempty"`
}
type Storage_Sqlite struct {
	Sqlite *github_com_MicroOps_cn_idas_pkg_client_gorm.SQLiteClient `protobuf:"bytes,14,opt,name=sqlite,proto3,oneof,customtype=github.com/MicroOps-cn/idas/pkg/client/gorm.SQLiteClient" json:"sqlite,omitempty"`
}

func (*Storage_Ref) isStorage_Source()    {}
func (*Storage_Mysql) isStorage_Source()  {}
func (*Storage_Redis) isStorage_Source()  {}
func (*Storage_Ldap) isStorage_Source()   {}
func (*Storage_Sqlite) isStorage_Source() {}

func (m *Storage) GetSource() isStorage_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Storage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Storage) GetRef() *StorageRef {
	if x, ok := m.GetSource().(*Storage_Ref); ok {
		return x.Ref
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Storage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Storage_Ref)(nil),
		(*Storage_Mysql)(nil),
		(*Storage_Redis)(nil),
		(*Storage_Ldap)(nil),
		(*Storage_Sqlite)(nil),
	}
}

type Storages struct {
	Default              *Storage                                             `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	Session              *Storage                                             `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	User                 *Storage                                             `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Logging              *Storage                                             `protobuf:"bytes,4,opt,name=logging,proto3" json:"logging,omitempty"`
	Geoip                *github_com_MicroOps_cn_idas_pkg_client_geoip.Client `protobuf:"bytes,15,opt,name=geoip,proto3,customtype=github.com/MicroOps-cn/idas/pkg/client/geoip.Client" json:"geoip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *Storages) Reset()         { *m = Storages{} }
func (m *Storages) String() string { return proto.CompactTextString(m) }
func (*Storages) ProtoMessage()    {}
func (*Storages) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}
func (m *Storages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storages.Unmarshal(m, b)
}
func (m *Storages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storages.Marshal(b, m, deterministic)
}
func (m *Storages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storages.Merge(m, src)
}
func (m *Storages) XXX_Size() int {
	return xxx_messageInfo_Storages.Size(m)
}
func (m *Storages) XXX_DiscardUnknown() {
	xxx_messageInfo_Storages.DiscardUnknown(m)
}

var xxx_messageInfo_Storages proto.InternalMessageInfo

func (m *Storages) GetDefault() *Storage {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Storages) GetSession() *Storage {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Storages) GetUser() *Storage {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Storages) GetLogging() *Storage {
	if m != nil {
		return m.Logging
	}
	return nil
}

type GlobalOptions struct {
	MaxUploadSize        *capacity.Capacity `protobuf:"bytes,1,opt,name=max_upload_size,json=maxUploadSize,proto3" json:"max_upload_size,omitempty"`
	MaxBodySize          *capacity.Capacity `protobuf:"bytes,2,opt,name=max_body_size,json=maxBodySize,proto3" json:"max_body_size,omitempty"`
	UploadPath           string             `protobuf:"bytes,3,opt,name=upload_path,json=uploadPath,proto3" json:"upload_path,omitempty"`
	Workspace            string             `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Secret               string             `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	JwtSecret            string             `protobuf:"bytes,6,opt,name=jwt_secret,json=jwtSecret,proto3" json:"jwt_secret,omitempty"`
	AppName              string             `protobuf:"bytes,7,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Oauth2               []*oauth2.Options  `protobuf:"bytes,8,rep,name=oauth2,proto3" json:"oauth2,omitempty"`
	DisableLoginForm     bool               `protobuf:"varint,9,opt,name=disable_login_form,json=disableLoginForm,proto3" json:"disable_login_form,omitempty"`
	Title                string             `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle             string             `protobuf:"bytes,11,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	Logo                 string             `protobuf:"bytes,12,opt,name=logo,proto3" json:"logo,omitempty"`
	Copyright            string             `protobuf:"bytes,13,opt,name=copyright,proto3" json:"copyright,omitempty"`
	AdminEmail           string             `protobuf:"bytes,14,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GlobalOptions) Reset()         { *m = GlobalOptions{} }
func (m *GlobalOptions) String() string { return proto.CompactTextString(m) }
func (*GlobalOptions) ProtoMessage()    {}
func (*GlobalOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}
func (m *GlobalOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalOptions.Unmarshal(m, b)
}
func (m *GlobalOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalOptions.Marshal(b, m, deterministic)
}
func (m *GlobalOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalOptions.Merge(m, src)
}
func (m *GlobalOptions) XXX_Size() int {
	return xxx_messageInfo_GlobalOptions.Size(m)
}
func (m *GlobalOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalOptions proto.InternalMessageInfo

func (m *GlobalOptions) GetMaxUploadSize() *capacity.Capacity {
	if m != nil {
		return m.MaxUploadSize
	}
	return nil
}

func (m *GlobalOptions) GetMaxBodySize() *capacity.Capacity {
	if m != nil {
		return m.MaxBodySize
	}
	return nil
}

func (m *GlobalOptions) GetUploadPath() string {
	if m != nil {
		return m.UploadPath
	}
	return ""
}

func (m *GlobalOptions) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GlobalOptions) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *GlobalOptions) GetJwtSecret() string {
	if m != nil {
		return m.JwtSecret
	}
	return ""
}

func (m *GlobalOptions) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *GlobalOptions) GetOauth2() []*oauth2.Options {
	if m != nil {
		return m.Oauth2
	}
	return nil
}

func (m *GlobalOptions) GetDisableLoginForm() bool {
	if m != nil {
		return m.DisableLoginForm
	}
	return false
}

func (m *GlobalOptions) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GlobalOptions) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *GlobalOptions) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *GlobalOptions) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *GlobalOptions) GetAdminEmail() string {
	if m != nil {
		return m.AdminEmail
	}
	return ""
}

type Security struct {
	TrustIp              []github_com_MicroOps_cn_fuck_sets.IPNet `protobuf:"bytes,1,rep,name=trust_ip,json=trustIp,proto3,customtype=github.com/MicroOps-cn/fuck/sets.IPNet" json:"trust_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Security) Reset()         { *m = Security{} }
func (m *Security) String() string { return proto.CompactTextString(m) }
func (*Security) ProtoMessage()    {}
func (*Security) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}
func (m *Security) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Security.Unmarshal(m, b)
}
func (m *Security) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Security.Marshal(b, m, deterministic)
}
func (m *Security) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Security.Merge(m, src)
}
func (m *Security) XXX_Size() int {
	return xxx_messageInfo_Security.Size(m)
}
func (m *Security) XXX_DiscardUnknown() {
	xxx_messageInfo_Security.DiscardUnknown(m)
}

var xxx_messageInfo_Security proto.InternalMessageInfo

type Config struct {
	Storage              *Storages                                                 `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Global               *GlobalOptions                                            `protobuf:"bytes,2,opt,name=global,proto3" json:"global,omitempty"`
	Smtp                 *github_com_MicroOps_cn_idas_pkg_client_email.SmtpOptions `protobuf:"bytes,3,opt,name=smtp,proto3,customtype=github.com/MicroOps-cn/idas/pkg/client/email.SmtpOptions" json:"smtp,omitempty"`
	Security             *Security                                                 `protobuf:"bytes,4,opt,name=security,proto3" json:"security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetStorage() *Storages {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *Config) GetGlobal() *GlobalOptions {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Config) GetSecurity() *Security {
	if m != nil {
		return m.Security
	}
	return nil
}

type RuntimeSecurityConfig struct {
	ForceEnableMfa              bool               `protobuf:"varint,1,opt,name=force_enable_mfa,json=forceEnableMfa,proto3" json:"forceEnableMfa"`
	PasswordComplexity          PasswordComplexity `protobuf:"varint,2,opt,name=password_complexity,json=passwordComplexity,proto3,enum=idas.config.PasswordComplexity" json:"passwordComplexity"`
	PasswordMinLength           uint32             `protobuf:"varint,3,opt,name=password_min_length,json=passwordMinLength,proto3" json:"passwordMinLength"`
	PasswordExpireTime          uint32             `protobuf:"varint,4,opt,name=password_expire_time,json=passwordExpireTime,proto3" json:"passwordExpireTime"`
	PasswordFailedLockThreshold uint32             `protobuf:"varint,5,opt,name=password_failed_lock_threshold,json=passwordFailedLockThreshold,proto3" json:"passwordFailedLockThreshold"`
	PasswordFailedLockDuration  uint32             `protobuf:"varint,6,opt,name=password_failed_lock_duration,json=passwordFailedLockDuration,proto3" json:"passwordFailedLockDuration"`
	PasswordHistory             uint32             `protobuf:"varint,7,opt,name=password_history,json=passwordHistory,proto3" json:"passwordHistory"`
	AccountInactiveLock         uint32             `protobuf:"varint,8,opt,name=account_inactive_lock,json=accountInactiveLock,proto3" json:"accountInactiveLock"`
	LoginSessionInactivityTime  uint32             `protobuf:"varint,9,opt,name=login_session_inactivity_time,json=loginSessionInactivityTime,proto3" json:"loginSessionInactivityTime"`
	LoginSessionMaxTime         uint32             `protobuf:"varint,10,opt,name=login_session_max_time,json=loginSessionMaxTime,proto3" json:"loginSessionMaxTime"`
	XXX_NoUnkeyedLiteral        struct{}           `json:"-"`
	XXX_unrecognized            []byte             `json:"-"`
	XXX_sizecache               int32              `json:"-"`
}

func (m *RuntimeSecurityConfig) Reset()         { *m = RuntimeSecurityConfig{} }
func (m *RuntimeSecurityConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeSecurityConfig) ProtoMessage()    {}
func (*RuntimeSecurityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{6}
}
func (m *RuntimeSecurityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeSecurityConfig.Unmarshal(m, b)
}
func (m *RuntimeSecurityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeSecurityConfig.Marshal(b, m, deterministic)
}
func (m *RuntimeSecurityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeSecurityConfig.Merge(m, src)
}
func (m *RuntimeSecurityConfig) XXX_Size() int {
	return xxx_messageInfo_RuntimeSecurityConfig.Size(m)
}
func (m *RuntimeSecurityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeSecurityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeSecurityConfig proto.InternalMessageInfo

func (m *RuntimeSecurityConfig) GetForceEnableMfa() bool {
	if m != nil {
		return m.ForceEnableMfa
	}
	return false
}

func (m *RuntimeSecurityConfig) GetPasswordComplexity() PasswordComplexity {
	if m != nil {
		return m.PasswordComplexity
	}
	return PasswordComplexity_unsafe
}

func (m *RuntimeSecurityConfig) GetPasswordMinLength() uint32 {
	if m != nil {
		return m.PasswordMinLength
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordExpireTime() uint32 {
	if m != nil {
		return m.PasswordExpireTime
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordFailedLockThreshold() uint32 {
	if m != nil {
		return m.PasswordFailedLockThreshold
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordFailedLockDuration() uint32 {
	if m != nil {
		return m.PasswordFailedLockDuration
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordHistory() uint32 {
	if m != nil {
		return m.PasswordHistory
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetAccountInactiveLock() uint32 {
	if m != nil {
		return m.AccountInactiveLock
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetLoginSessionInactivityTime() uint32 {
	if m != nil {
		return m.LoginSessionInactivityTime
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetLoginSessionMaxTime() uint32 {
	if m != nil {
		return m.LoginSessionMaxTime
	}
	return 0
}

type RuntimeConfig struct {
	Security             *RuntimeSecurityConfig `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RuntimeConfig) Reset()         { *m = RuntimeConfig{} }
func (m *RuntimeConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeConfig) ProtoMessage()    {}
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{7}
}
func (m *RuntimeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeConfig.Unmarshal(m, b)
}
func (m *RuntimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeConfig.Marshal(b, m, deterministic)
}
func (m *RuntimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeConfig.Merge(m, src)
}
func (m *RuntimeConfig) XXX_Size() int {
	return xxx_messageInfo_RuntimeConfig.Size(m)
}
func (m *RuntimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeConfig proto.InternalMessageInfo

func (m *RuntimeConfig) GetSecurity() *RuntimeSecurityConfig {
	if m != nil {
		return m.Security
	}
	return nil
}

func init() {
	proto.RegisterEnum("idas.config.PasswordComplexity", PasswordComplexity_name, PasswordComplexity_value)
	proto.RegisterType((*StorageRef)(nil), "idas.config.StorageRef")
	proto.RegisterType((*Storage)(nil), "idas.config.Storage")
	proto.RegisterType((*Storages)(nil), "idas.config.Storages")
	proto.RegisterType((*GlobalOptions)(nil), "idas.config.GlobalOptions")
	proto.RegisterType((*Security)(nil), "idas.config.security")
	proto.RegisterType((*Config)(nil), "idas.config.Config")
	proto.RegisterType((*RuntimeSecurityConfig)(nil), "idas.config.RuntimeSecurityConfig")
	proto.RegisterType((*RuntimeConfig)(nil), "idas.config.RuntimeConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 1289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdf, 0x72, 0xd3, 0x46,
	0x17, 0x27, 0x89, 0xe3, 0x3f, 0xc7, 0x18, 0xc2, 0x92, 0x80, 0xbe, 0xf0, 0x81, 0x32, 0xbe, 0xf8,
	0x26, 0x1f, 0xb4, 0xf6, 0x34, 0xcc, 0x94, 0xce, 0xc0, 0x30, 0x1d, 0xa7, 0x81, 0x64, 0xea, 0x40,
	0x90, 0xe9, 0x4d, 0x6f, 0x34, 0x6b, 0x69, 0x2d, 0x2f, 0x96, 0xb4, 0x42, 0xbb, 0x22, 0x31, 0x6f,
	0xd0, 0xdb, 0xbe, 0x41, 0xdf, 0xa1, 0xef, 0xd2, 0x99, 0x5c, 0xf8, 0x01, 0xfc, 0x14, 0x1d, 0x9d,
	0x5d, 0xd9, 0x31, 0x31, 0x29, 0xe5, 0x26, 0xd1, 0xfe, 0x7e, 0xbf, 0xb3, 0xbf, 0xd5, 0xd9, 0x73,
	0x8e, 0x0c, 0xd7, 0x3d, 0x11, 0x0f, 0x78, 0xd0, 0x4a, 0x52, 0xa1, 0x04, 0xa9, 0x73, 0x9f, 0xca,
	0x96, 0x86, 0xb6, 0x37, 0xd4, 0x38, 0x61, 0xb2, 0x1d, 0x88, 0x34, 0xd2, 0xf4, 0xf6, 0x2d, 0x8d,
	0xa4, 0xcc, 0xe7, 0xd2, 0x40, 0x46, 0x14, 0xfa, 0x34, 0x31, 0xc8, 0xa6, 0x46, 0x3c, 0x9a, 0x50,
	0x8f, 0xab, 0xf1, 0x62, 0x28, 0x8b, 0x28, 0x0f, 0x17, 0xa1, 0x80, 0x09, 0x5e, 0xc4, 0x12, 0x0d,
	0x09, 0x9a, 0xa9, 0xe1, 0x5e, 0xb1, 0x5f, 0x20, 0x02, 0x81, 0x8f, 0xed, 0xfc, 0x49, 0xa3, 0x4d,
	0x1f, 0xa0, 0xa7, 0x44, 0x4a, 0x03, 0xe6, 0xb0, 0x01, 0x69, 0x41, 0x45, 0xea, 0x95, 0xb5, 0xb2,
	0xb3, 0xb2, 0x5b, 0xdf, 0xdb, 0x6c, 0x5d, 0x78, 0x93, 0x56, 0xa1, 0x2c, 0x44, 0x84, 0x40, 0x29,
	0xa1, 0x6a, 0x68, 0xad, 0xee, 0xac, 0xec, 0xd6, 0x1c, 0x7c, 0xce, 0xb1, 0x98, 0x46, 0xcc, 0x5a,
	0xd3, 0x58, 0xfe, 0xdc, 0xfc, 0xa3, 0x04, 0x95, 0xde, 0x3c, 0x06, 0xf9, 0x95, 0x39, 0x4f, 0x1e,
	0xc1, 0x5a, 0xca, 0x06, 0x16, 0xa0, 0xe7, 0xdd, 0xa5, 0x9e, 0x6c, 0x70, 0x78, 0xcd, 0xc9, 0x55,
	0x44, 0xc2, 0x7a, 0x34, 0x96, 0xef, 0x43, 0xab, 0x8e, 0xf2, 0x07, 0x46, 0x1e, 0x72, 0x16, 0xab,
	0x16, 0x66, 0xf9, 0x78, 0xdc, 0x7b, 0xd3, 0x7d, 0x9d, 0x28, 0x2e, 0x62, 0xd9, 0x79, 0x7a, 0x3e,
	0xb1, 0x9f, 0x04, 0x5c, 0x0d, 0xb3, 0x7e, 0xcb, 0x13, 0x51, 0xfb, 0x98, 0x7b, 0xa9, 0x78, 0x9d,
	0xc8, 0x6f, 0xbd, 0xb8, 0x9d, 0x47, 0xb6, 0x93, 0x51, 0xd0, 0xd6, 0xd1, 0xed, 0x79, 0xf4, 0x3e,
	0x02, 0x87, 0xd7, 0x1c, 0xed, 0x45, 0x12, 0x58, 0xc7, 0xeb, 0xb2, 0xae, 0xa3, 0xa9, 0xbd, 0x60,
	0xaa, 0x2f, 0xd2, 0xc9, 0xff, 0x16, 0xae, 0x4f, 0xce, 0x27, 0xf6, 0xe3, 0x2f, 0x74, 0xd5, 0xe1,
	0x73, 0x47, 0x5c, 0x93, 0x11, 0x94, 0xf2, 0x6a, 0xb0, 0x1a, 0x68, 0x78, 0x7f, 0xc1, 0x10, 0xcb,
	0xa4, 0xeb, 0xd3, 0xa4, 0xb0, 0xfb, 0xfe, 0x7c, 0x62, 0xef, 0x7d, 0xa1, 0x1d, 0x06, 0xcf, 0xdc,
	0xd0, 0x84, 0x9c, 0x42, 0x59, 0xbe, 0x0f, 0xb9, 0x62, 0xd6, 0x8d, 0x25, 0xef, 0x87, 0x69, 0xe9,
	0xbd, 0xe9, 0x72, 0xc5, 0x0a, 0xc3, 0x67, 0xe7, 0x13, 0xfb, 0x87, 0x7f, 0x93, 0x55, 0x1d, 0x3e,
	0xb3, 0x35, 0x76, 0x9d, 0x2a, 0x94, 0xa5, 0xc8, 0x52, 0x8f, 0x35, 0xff, 0x5c, 0x85, 0xaa, 0xb9,
	0x6c, 0x99, 0x17, 0xa2, 0xcf, 0x06, 0x34, 0x0b, 0xd5, 0xd5, 0x85, 0x68, 0x44, 0x58, 0xb8, 0x4c,
	0x4a, 0x2e, 0x62, 0xac, 0xc5, 0xcf, 0x17, 0xae, 0x16, 0x91, 0x5d, 0x28, 0x65, 0x92, 0xa5, 0x58,
	0xa4, 0x9f, 0x13, 0xa3, 0x22, 0xdf, 0x39, 0x14, 0x41, 0xc0, 0xe3, 0xc0, 0x2a, 0x5d, 0xb5, 0xb3,
	0x11, 0x91, 0x18, 0xd6, 0xb1, 0x13, 0xad, 0x9b, 0xcb, 0x12, 0x89, 0x3d, 0xfa, 0x92, 0x89, 0xa3,
	0x93, 0xaf, 0x29, 0x14, 0x1d, 0xae, 0x73, 0xe8, 0x68, 0x9b, 0xe6, 0x6f, 0x25, 0x68, 0xbc, 0x0c,
	0x45, 0x9f, 0x86, 0x66, 0x47, 0xf2, 0x23, 0xdc, 0x8c, 0xe8, 0x99, 0x9b, 0x25, 0xa1, 0xa0, 0xbe,
	0x2b, 0xf9, 0xc7, 0xa2, 0x99, 0x2d, 0x7d, 0x96, 0x64, 0x14, 0xb4, 0x32, 0xc5, 0x43, 0xd9, 0xda,
	0x37, 0xb3, 0xc5, 0x69, 0x44, 0xf4, 0xec, 0x17, 0xd4, 0xf7, 0xf8, 0x47, 0x46, 0x9e, 0x41, 0x0e,
	0xb8, 0x7d, 0xe1, 0x8f, 0x75, 0xfc, 0xea, 0x3f, 0xc4, 0xd7, 0x23, 0x7a, 0xd6, 0x11, 0xfe, 0x18,
	0xa3, 0x6d, 0xa8, 0x1b, 0x6f, 0x9c, 0x0d, 0x7a, 0x0e, 0x80, 0x86, 0x4e, 0xf2, 0x09, 0xf1, 0x5f,
	0xa8, 0x9d, 0x8a, 0x74, 0x24, 0x13, 0xea, 0x31, 0x4c, 0x6a, 0xcd, 0x99, 0x03, 0xe4, 0x0e, 0x94,
	0x25, 0xf3, 0x52, 0xa6, 0xac, 0x75, 0xa4, 0xcc, 0x8a, 0xdc, 0x07, 0x78, 0x77, 0xaa, 0x5c, 0xc3,
	0x95, 0x75, 0xd8, 0xbb, 0x53, 0xd5, 0xd3, 0xf4, 0x7f, 0xa0, 0x4a, 0x93, 0xc4, 0xc5, 0xd1, 0x52,
	0x41, 0xb2, 0x42, 0x93, 0xe4, 0x55, 0x3e, 0x5d, 0x1e, 0x43, 0x59, 0x4f, 0x42, 0xab, 0xba, 0xb3,
	0xb6, 0x5b, 0xdf, 0xbb, 0xb7, 0x70, 0x27, 0x66, 0x48, 0x9a, 0xec, 0x39, 0x46, 0x4a, 0xbe, 0x01,
	0xe2, 0x73, 0x49, 0xfb, 0x21, 0x73, 0x43, 0x11, 0xf0, 0xd8, 0x1d, 0x88, 0x34, 0xb2, 0x6a, 0x3b,
	0x2b, 0xbb, 0x55, 0x67, 0xc3, 0x30, 0xdd, 0x9c, 0x78, 0x21, 0xd2, 0x88, 0x6c, 0xc2, 0xba, 0xe2,
	0x2a, 0x64, 0x38, 0xc2, 0x6a, 0x8e, 0x5e, 0x90, 0x7b, 0x50, 0x93, 0x59, 0xdf, 0xd5, 0x4c, 0x1d,
	0x99, 0xaa, 0xcc, 0xfa, 0x6f, 0x91, 0x24, 0x50, 0x0a, 0x45, 0x20, 0x70, 0xa0, 0xd4, 0x1c, 0x7c,
	0xce, 0x33, 0xe3, 0x89, 0x64, 0x9c, 0xf2, 0x60, 0xa8, 0xb0, 0xf1, 0x6b, 0xce, 0x1c, 0xc8, 0x13,
	0x4b, 0xfd, 0x88, 0xc7, 0x2e, 0x4e, 0x7f, 0xec, 0xd4, 0x9a, 0x03, 0x08, 0x1d, 0xe4, 0x48, 0xf3,
	0x0d, 0x54, 0x25, 0xf3, 0xb2, 0x94, 0xab, 0x31, 0x39, 0x80, 0xaa, 0x4a, 0x33, 0xa9, 0x5c, 0x9e,
	0x58, 0x2b, 0x3b, 0x6b, 0xbb, 0xb5, 0xce, 0xc3, 0xf3, 0x89, 0xfd, 0xbf, 0xcf, 0x54, 0xda, 0x20,
	0xf3, 0x46, 0x6d, 0xc9, 0x94, 0x6c, 0x1d, 0x9d, 0xbc, 0x62, 0xca, 0xa9, 0x60, 0xec, 0x51, 0xd2,
	0xfc, 0x7d, 0x15, 0xca, 0xfb, 0x58, 0xea, 0xa4, 0xfd, 0xe9, 0xc7, 0x61, 0x6b, 0x59, 0x27, 0xc8,
	0xf9, 0xd7, 0x61, 0x0f, 0xca, 0x01, 0x56, 0xa6, 0xa9, 0x9f, 0xed, 0x05, 0xfd, 0x42, 0xd1, 0x3a,
	0x46, 0x49, 0x12, 0x28, 0xc9, 0x48, 0x25, 0xa6, 0x31, 0x17, 0x67, 0xbb, 0xfe, 0xe8, 0xf5, 0x22,
	0x95, 0x7c, 0xcd, 0x14, 0xba, 0x14, 0xed, 0xa0, 0x13, 0xf9, 0x6e, 0x9e, 0x34, 0xd3, 0xe1, 0x8b,
	0xef, 0x55, 0x90, 0xce, 0x4c, 0xd6, 0xfc, 0xab, 0x0c, 0x5b, 0x4e, 0x16, 0x2b, 0x1e, 0xb1, 0x9e,
	0xc1, 0x4c, 0x8e, 0x9e, 0xc1, 0xc6, 0x40, 0xa4, 0x1e, 0x73, 0x59, 0x8c, 0xa5, 0x13, 0x0d, 0x28,
	0x26, 0xab, 0xda, 0x21, 0xd3, 0x89, 0x7d, 0x03, 0xb9, 0x03, 0xa4, 0x8e, 0x07, 0xd4, 0xf9, 0x64,
	0x4d, 0x86, 0x70, 0x3b, 0xa1, 0x52, 0x9e, 0x8a, 0xd4, 0x77, 0x3d, 0x11, 0x25, 0x21, 0x3b, 0xcb,
	0x4f, 0x95, 0x67, 0xef, 0xc6, 0x6c, 0x92, 0xe8, 0x53, 0x9d, 0x18, 0xdd, 0xfe, 0x4c, 0xd6, 0xb9,
	0x33, 0x9d, 0xd8, 0x24, 0xb9, 0x84, 0x3b, 0x4b, 0x30, 0x72, 0x70, 0xc1, 0x29, 0xaf, 0xa8, 0x90,
	0xc5, 0x81, 0xe9, 0xd5, 0x46, 0x67, 0x6b, 0x3a, 0xb1, 0x6f, 0x15, 0xf4, 0x31, 0x8f, 0xbb, 0x48,
	0x3a, 0x97, 0x21, 0x72, 0x08, 0x9b, 0xb3, 0x6d, 0xd8, 0x59, 0xc2, 0x53, 0xe6, 0xe6, 0x49, 0xc1,
	0x3c, 0x36, 0x16, 0x0f, 0x74, 0x80, 0xf4, 0x5b, 0x1e, 0x31, 0x67, 0x09, 0x46, 0x7c, 0x78, 0x30,
	0xdb, 0x69, 0x40, 0x79, 0xc8, 0x7c, 0x37, 0x14, 0xde, 0xc8, 0x55, 0xc3, 0x94, 0xc9, 0xa1, 0x08,
	0x7d, 0x9c, 0x06, 0x8d, 0x8e, 0x3d, 0x9d, 0xd8, 0xf7, 0x0a, 0xe5, 0x0b, 0x14, 0x76, 0x85, 0x37,
	0x7a, 0x5b, 0xc8, 0x9c, 0xab, 0x48, 0x42, 0xe1, 0xfe, 0x52, 0x17, 0x3f, 0x4b, 0x69, 0x5e, 0x13,
	0x38, 0x56, 0x1a, 0x9d, 0x07, 0xd3, 0x89, 0xbd, 0x7d, 0x79, 0x9f, 0x9f, 0x8c, 0xca, 0xb9, 0x82,
	0x23, 0xcf, 0x61, 0x63, 0x66, 0x31, 0xe4, 0x79, 0x2b, 0x8c, 0x71, 0x1e, 0x35, 0x3a, 0xb7, 0xa7,
	0x13, 0xfb, 0x66, 0xc1, 0x1d, 0x6a, 0xca, 0xf9, 0x14, 0x20, 0x3f, 0xc3, 0x16, 0xf5, 0x3c, 0x91,
	0xc5, 0xca, 0xe5, 0x31, 0xf5, 0x14, 0xff, 0xc0, 0xf0, 0x8c, 0x56, 0x15, 0x37, 0xb9, 0x3b, 0x9d,
	0xd8, 0xb7, 0x8d, 0xe0, 0xc8, 0xf0, 0xb9, 0xbf, 0xb3, 0x0c, 0xcc, 0xdf, 0x57, 0x0f, 0x2f, 0xf3,
	0xdd, 0x2b, 0xb6, 0xe4, 0x6a, 0xac, 0x2f, 0xaa, 0x36, 0x7f, 0x5f, 0x14, 0xf6, 0xb4, 0xee, 0x68,
	0x26, 0xc3, 0x0b, 0xbb, 0x82, 0x23, 0x5d, 0xb8, 0xb3, 0x68, 0x91, 0x7f, 0x39, 0x70, 0x6f, 0x98,
	0x1f, 0xf8, 0x62, 0xfc, 0x31, 0x3d, 0xc3, 0x4d, 0x97, 0x81, 0xcd, 0xd7, 0xd0, 0x30, 0x8d, 0x65,
	0x1a, 0xea, 0xf9, 0x85, 0xee, 0xd4, 0x53, 0xa7, 0xb9, 0xd0, 0x07, 0x4b, 0xdb, 0x70, 0xde, 0xaa,
	0x0f, 0x5f, 0x00, 0xb9, 0xdc, 0x2a, 0x04, 0xa0, 0x9c, 0xc5, 0x92, 0x0e, 0xd8, 0xc6, 0x35, 0x52,
	0x87, 0x4a, 0xc0, 0x62, 0x96, 0xd2, 0x70, 0x63, 0x85, 0x54, 0xa1, 0x84, 0xf0, 0x2a, 0x69, 0x40,
	0xed, 0x03, 0x4b, 0xc7, 0x2e, 0x2e, 0xd7, 0x3a, 0x8f, 0x7e, 0xfd, 0xff, 0x55, 0x73, 0x46, 0x9f,
	0xe6, 0xa9, 0xfe, 0x77, 0x52, 0xe9, 0x97, 0xf1, 0xd7, 0xf5, 0xe3, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x25, 0x62, 0xac, 0x4f, 0x17, 0x0c, 0x00, 0x00,
}
