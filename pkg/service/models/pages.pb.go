// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/pages.proto

package models

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// @sync-to-public:public/src/services/idas/enums.ts:PageFieldType
type FieldType int32

const (
	FieldType_text          FieldType = 0
	FieldType_textarea      FieldType = 2
	FieldType_digit         FieldType = 3
	FieldType_digitRange    FieldType = 4
	FieldType_checkbox      FieldType = 5
	FieldType_radio         FieldType = 6
	FieldType_switch        FieldType = 7
	FieldType_select        FieldType = 8
	FieldType_multiSelect   FieldType = 9
	FieldType_timeRange     FieldType = 10
	FieldType_date          FieldType = 11
	FieldType_dateRange     FieldType = 12
	FieldType_dateTime      FieldType = 13
	FieldType_dateTimeRange FieldType = 14
)

var FieldType_name = map[int32]string{
	0:  "text",
	2:  "textarea",
	3:  "digit",
	4:  "digitRange",
	5:  "checkbox",
	6:  "radio",
	7:  "switch",
	8:  "select",
	9:  "multiSelect",
	10: "timeRange",
	11: "date",
	12: "dateRange",
	13: "dateTime",
	14: "dateTimeRange",
}

var FieldType_value = map[string]int32{
	"text":          0,
	"textarea":      2,
	"digit":         3,
	"digitRange":    4,
	"checkbox":      5,
	"radio":         6,
	"switch":        7,
	"select":        8,
	"multiSelect":   9,
	"timeRange":     10,
	"date":          11,
	"dateRange":     12,
	"dateTime":      13,
	"dateTimeRange": 14,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}

func (FieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5aaab2691b459056, []int{0}
}

// @sync-to-public:public/src/services/idas/enums.ts:PageStatus
type PageStatus int32

const (
	PageStatus_all      PageStatus = 0
	PageStatus_disabled PageStatus = 1
	PageStatus_enabled  PageStatus = 2
)

var PageStatus_name = map[int32]string{
	0: "all",
	1: "disabled",
	2: "enabled",
}

var PageStatus_value = map[string]int32{
	"all":      0,
	"disabled": 1,
	"enabled":  2,
}

func (x PageStatus) String() string {
	return proto.EnumName(PageStatus_name, int32(x))
}

func (PageStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5aaab2691b459056, []int{1}
}

type FieldValue struct {
	Raw                  string      `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Value                interface{} `protobuf:"bytes,2,opt,name=value,proto3,customtype=interface{}" json:"value"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FieldValue) Reset()         { *m = FieldValue{} }
func (m *FieldValue) String() string { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()    {}
func (*FieldValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aaab2691b459056, []int{0}
}
func (m *FieldValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldValue.Unmarshal(m, b)
}
func (m *FieldValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldValue.Marshal(b, m, deterministic)
}
func (m *FieldValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldValue.Merge(m, src)
}
func (m *FieldValue) XXX_Size() int {
	return xxx_messageInfo_FieldValue.Size(m)
}
func (m *FieldValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldValue.DiscardUnknown(m)
}

var xxx_messageInfo_FieldValue proto.InternalMessageInfo

func (m *FieldValue) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

type FieldConfig struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name" valid:"required"`
	DisplayName          string            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"displayName,omitempty"`
	ValueType            FieldType         `protobuf:"varint,3,opt,name=value_type,json=valueType,proto3,enum=idas.service.models.FieldType" json:"valueType" valid:"required"`
	ValueEnum            map[string]string `protobuf:"bytes,4,rep,name=value_enum,json=valueEnum,proto3" json:"valueEnum,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Max                  float32           `protobuf:"fixed32,5,opt,name=max,proto3" json:"max,omitempty"`
	Min                  float32           `protobuf:"fixed32,6,opt,name=min,proto3" json:"min,omitempty"`
	MaxWidth             int32             `protobuf:"varint,7,opt,name=max_width,json=maxWidth,proto3" json:"maxWidth,omitempty"`
	MinWidth             int32             `protobuf:"varint,8,opt,name=min_width,json=minWidth,proto3" json:"minWidth,omitempty"`
	DefaultValue         string            `protobuf:"bytes,9,opt,name=default_value,json=defaultValue,proto3" json:"defaultValue,omitempty"`
	Tooltip              string            `protobuf:"bytes,10,opt,name=tooltip,proto3" json:"tooltip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FieldConfig) Reset()         { *m = FieldConfig{} }
func (m *FieldConfig) String() string { return proto.CompactTextString(m) }
func (*FieldConfig) ProtoMessage()    {}
func (*FieldConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5aaab2691b459056, []int{1}
}
func (m *FieldConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldConfig.Unmarshal(m, b)
}
func (m *FieldConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldConfig.Marshal(b, m, deterministic)
}
func (m *FieldConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldConfig.Merge(m, src)
}
func (m *FieldConfig) XXX_Size() int {
	return xxx_messageInfo_FieldConfig.Size(m)
}
func (m *FieldConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FieldConfig proto.InternalMessageInfo

func (m *FieldConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldConfig) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *FieldConfig) GetValueType() FieldType {
	if m != nil {
		return m.ValueType
	}
	return FieldType_text
}

func (m *FieldConfig) GetValueEnum() map[string]string {
	if m != nil {
		return m.ValueEnum
	}
	return nil
}

func (m *FieldConfig) GetMax() float32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *FieldConfig) GetMin() float32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *FieldConfig) GetMaxWidth() int32 {
	if m != nil {
		return m.MaxWidth
	}
	return 0
}

func (m *FieldConfig) GetMinWidth() int32 {
	if m != nil {
		return m.MinWidth
	}
	return 0
}

func (m *FieldConfig) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *FieldConfig) GetTooltip() string {
	if m != nil {
		return m.Tooltip
	}
	return ""
}

func init() {
	proto.RegisterEnum("idas.service.models.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("idas.service.models.PageStatus", PageStatus_name, PageStatus_value)
	proto.RegisterType((*FieldValue)(nil), "idas.service.models.FieldValue")
	proto.RegisterType((*FieldConfig)(nil), "idas.service.models.FieldConfig")
	proto.RegisterMapType((map[string]string)(nil), "idas.service.models.FieldConfig.ValueEnumEntry")
}

func init() { proto.RegisterFile("models/pages.proto", fileDescriptor_5aaab2691b459056) }

var fileDescriptor_5aaab2691b459056 = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0x73, 0xf6, 0xe4, 0xf0, 0xfb, 0xdf, 0xf6, 0xef, 0x6f, 0x2a, 0x84, 0x43, 0xae, 0x42,
	0x05, 0x71, 0xd5, 0x0a, 0x81, 0x4a, 0x25, 0xa4, 0xa0, 0x22, 0x71, 0x01, 0x54, 0x69, 0x05, 0x12,
	0x37, 0x61, 0x63, 0x4f, 0x9d, 0x55, 0x7c, 0xc2, 0x5e, 0xa7, 0x89, 0x10, 0xef, 0x07, 0xaf, 0xc0,
	0x85, 0x1f, 0x20, 0x37, 0x48, 0x3c, 0x01, 0xda, 0x5d, 0xa7, 0xa4, 0xa2, 0x5c, 0x79, 0xe6, 0x9b,
	0xf9, 0xe6, 0xb4, 0x9f, 0x81, 0x04, 0x91, 0x8b, 0x7e, 0x6a, 0xc7, 0xd4, 0xc3, 0x74, 0x10, 0x27,
	0x11, 0x8f, 0xc8, 0x36, 0x73, 0x69, 0x3a, 0x48, 0x31, 0x99, 0x33, 0x07, 0x07, 0x2a, 0x61, 0x6f,
	0xc7, 0x8b, 0xbc, 0x48, 0xc6, 0x6d, 0x61, 0xa9, 0xd4, 0xde, 0x2b, 0x80, 0x97, 0x0c, 0x7d, 0xf7,
	0x1d, 0xf5, 0x33, 0x24, 0x06, 0x94, 0x13, 0x7a, 0x65, 0x6a, 0x5d, 0xad, 0xaf, 0x8f, 0x84, 0x49,
	0x1e, 0x40, 0x75, 0x2e, 0x42, 0x66, 0x49, 0x60, 0xc3, 0xed, 0xaf, 0xb9, 0xb5, 0xf5, 0x3d, 0xb7,
	0x9a, 0x2c, 0xe4, 0x98, 0x5c, 0x52, 0x07, 0x3f, 0x7f, 0x19, 0xa9, 0x8c, 0xde, 0x8f, 0x0a, 0x34,
	0x65, 0xad, 0x17, 0x51, 0x78, 0xc9, 0x3c, 0x72, 0x00, 0x95, 0x90, 0x06, 0xa8, 0xaa, 0x0d, 0xef,
	0xae, 0x72, 0x4b, 0xfa, 0x3f, 0x73, 0xcb, 0x98, 0x53, 0x9f, 0xb9, 0xc7, 0xbd, 0x04, 0x3f, 0x65,
	0x2c, 0x41, 0xb7, 0x37, 0x92, 0x11, 0x72, 0x02, 0x2d, 0x97, 0xa5, 0xb1, 0x4f, 0x97, 0x63, 0xc9,
	0x54, 0x3d, 0xef, 0xac, 0x72, 0xeb, 0xbf, 0x02, 0x7f, 0x43, 0x03, 0x7c, 0x18, 0x05, 0x8c, 0x63,
	0x10, 0xf3, 0xe5, 0xa8, 0xb9, 0x01, 0x93, 0x8f, 0x00, 0x72, 0x90, 0x31, 0x5f, 0xc6, 0x68, 0x96,
	0xbb, 0x5a, 0xbf, 0x73, 0x78, 0x6f, 0x70, 0xcb, 0x29, 0x06, 0x72, 0xca, 0x8b, 0x65, 0x8c, 0xc3,
	0xfb, 0xab, 0xdc, 0xd2, 0x25, 0x4b, 0xb8, 0xb7, 0x8e, 0xf6, 0x3b, 0x4c, 0xbc, 0x75, 0x07, 0x0c,
	0xb3, 0xc0, 0xac, 0x74, 0xcb, 0xfd, 0xe6, 0xa1, 0xfd, 0xf7, 0x0e, 0xea, 0x0e, 0x03, 0x79, 0xda,
	0xd3, 0x30, 0x0b, 0x4e, 0x43, 0x9e, 0x2c, 0x87, 0xff, 0xaf, 0x72, 0x6b, 0x7b, 0xbe, 0xc6, 0x36,
	0x96, 0xd1, 0xaf, 0x41, 0xf1, 0x0e, 0x01, 0x5d, 0x98, 0xd5, 0xae, 0xd6, 0x2f, 0x8d, 0x84, 0x29,
	0x11, 0x16, 0x9a, 0xb5, 0x02, 0x61, 0x21, 0x39, 0x02, 0x3d, 0xa0, 0x8b, 0xf1, 0x15, 0x73, 0xf9,
	0xd4, 0xac, 0x77, 0xb5, 0x7e, 0x75, 0xb8, 0xbb, 0xca, 0x2d, 0x12, 0xd0, 0xc5, 0x7b, 0x81, 0x6d,
	0x54, 0x6e, 0xac, 0x31, 0x49, 0x62, 0x61, 0x41, 0x6a, 0x6c, 0x90, 0x58, 0xf8, 0x27, 0xa9, 0xc0,
	0xc8, 0x73, 0x68, 0xbb, 0x78, 0x49, 0x33, 0x9f, 0x8f, 0x95, 0x16, 0x74, 0xf9, 0x2e, 0x7b, 0xab,
	0xdc, 0xda, 0x2d, 0x02, 0x72, 0xc7, 0x0d, 0x72, 0x6b, 0x13, 0x27, 0x26, 0xd4, 0x79, 0x14, 0xf9,
	0x9c, 0xc5, 0x26, 0x48, 0x69, 0xad, 0xdd, 0xbd, 0x13, 0xe8, 0xdc, 0x3c, 0x8f, 0x58, 0x74, 0x86,
	0xcb, 0xb5, 0x04, 0x67, 0xb8, 0x24, 0x3b, 0x37, 0x24, 0x58, 0xa8, 0xed, 0xb8, 0xf4, 0x54, 0xdb,
	0xff, 0xa6, 0x81, 0x7e, 0xfd, 0x96, 0xa4, 0x01, 0x15, 0x8e, 0x0b, 0x6e, 0x6c, 0x91, 0x16, 0x34,
	0x84, 0x45, 0x13, 0xa4, 0x46, 0x89, 0xe8, 0x50, 0x75, 0x99, 0xc7, 0xb8, 0x51, 0x26, 0x1d, 0x00,
	0x69, 0x8e, 0x68, 0xe8, 0xa1, 0x51, 0x11, 0x89, 0xce, 0x14, 0x9d, 0xd9, 0x24, 0x5a, 0x18, 0x55,
	0x91, 0x98, 0x50, 0x97, 0x45, 0x46, 0x8d, 0x00, 0xd4, 0xd2, 0x2b, 0xc6, 0x9d, 0xa9, 0x51, 0x97,
	0x36, 0xfa, 0xe8, 0x70, 0xa3, 0x41, 0xfe, 0x81, 0x66, 0x90, 0xf9, 0x9c, 0x9d, 0x2b, 0x40, 0x27,
	0x6d, 0xd0, 0x39, 0x0b, 0x50, 0x15, 0x04, 0x31, 0x83, 0x4b, 0x39, 0x1a, 0x4d, 0x11, 0x10, 0x96,
	0x0a, 0xb4, 0x44, 0x27, 0xe1, 0x5e, 0xb0, 0x00, 0x8d, 0x36, 0xf9, 0x17, 0xda, 0x6b, 0x4f, 0x25,
	0x74, 0xf6, 0x0f, 0x00, 0xce, 0xa8, 0x87, 0xe7, 0x9c, 0xf2, 0x2c, 0x25, 0x75, 0x28, 0x53, 0xdf,
	0x57, 0xab, 0xb8, 0x2c, 0xa5, 0x13, 0x1f, 0x5d, 0x43, 0x23, 0x4d, 0xa8, 0x63, 0xa8, 0x9c, 0xd2,
	0xf0, 0xc9, 0x87, 0xc7, 0x1e, 0xe3, 0xd3, 0x6c, 0x32, 0x70, 0xa2, 0xc0, 0x7e, 0xcd, 0x9c, 0x24,
	0x7a, 0x1b, 0xa7, 0x8f, 0x9c, 0xd0, 0x16, 0x8a, 0xb4, 0xe3, 0x99, 0x67, 0x17, 0xaa, 0xb4, 0x95,
	0x2a, 0x9f, 0xa9, 0xcf, 0xd9, 0xd6, 0xa4, 0x26, 0x7f, 0xfe, 0xa3, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xea, 0xdc, 0x09, 0x88, 0x3d, 0x04, 0x00, 0x00,
}
