// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/apps.proto

package models

import (
	database_sql "database/sql"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AppProxyUrl struct {
	Model      `protobuf:"bytes,1,opt,name=model,proto3,embedded=model" json:",omitempty"`
	AppProxyId string `protobuf:"bytes,2,opt,name=app_proxy_id,json=appProxyId,proto3" json:"-" type:char(36);`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"type:varchar(50);"`
	Method     string `protobuf:"bytes,4,opt,name=method,proto3" json:"method" gorm:"type:varchar(8);"`
	Url        string `protobuf:"bytes,5,opt,name=url,proto3" json:"url" gorm:"type:varchar(50);"`
	Upstream   string `protobuf:"bytes,6,opt,name=upstream,proto3" json:"upstream,omitempty" gorm:"type:varchar(50);"`
	Index      uint32 `protobuf:"varint,9,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *AppProxyUrl) Reset()         { *m = AppProxyUrl{} }
func (m *AppProxyUrl) String() string { return proto.CompactTextString(m) }
func (*AppProxyUrl) ProtoMessage()    {}
func (*AppProxyUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9c739658c0ca6f6, []int{0}
}
func (m *AppProxyUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppProxyUrl.Unmarshal(m, b)
}
func (m *AppProxyUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppProxyUrl.Marshal(b, m, deterministic)
}
func (m *AppProxyUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppProxyUrl.Merge(m, src)
}
func (m *AppProxyUrl) XXX_Size() int {
	return xxx_messageInfo_AppProxyUrl.Size(m)
}
func (m *AppProxyUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_AppProxyUrl.DiscardUnknown(m)
}

var xxx_messageInfo_AppProxyUrl proto.InternalMessageInfo

func (m *AppProxyUrl) GetAppProxyId() string {
	if m != nil {
		return m.AppProxyId
	}
	return ""
}

func (m *AppProxyUrl) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppProxyUrl) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *AppProxyUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AppProxyUrl) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *AppProxyUrl) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type AppProxy struct {
	Model                 `protobuf:"bytes,1,opt,name=model,proto3,embedded=model" json:",omitempty"`
	AppId                 string                `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"appId" gorm:"type:char(36);unique;not null"`
	Domain                string                `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain" gorm:"type:varchar(50);" valid:"required"`
	Upstream              string                `protobuf:"bytes,4,opt,name=upstream,proto3" json:"upstream" gorm:"type:varchar(50);" valid:"required"`
	Urls                  AppProxyUrls          `protobuf:"bytes,5,opt,name=urls,proto3,customtype=AppProxyUrls" json:"urls" gorm:"foreignKey:AppProxyId"`
	InsecureSkipVerify    bool                  `protobuf:"varint,6,opt,name=insecure_skip_verify,json=insecureSkipVerify,proto3" json:"insecureSkipVerify" gorm:"not null;default:0"`
	TransparentServerName bool                  `protobuf:"varint,7,opt,name=transparent_server_name,json=transparentServerName,proto3" json:"transparentServerName" gorm:"not null;default:0"`
	JwtProvider           bool                  `protobuf:"varint,8,opt,name=jwt_provider,json=jwtProvider,proto3" json:"jwtProvider"`
	JwtCookieName         string                `protobuf:"bytes,9,opt,name=jwt_cookie_name,json=jwtCookieName,proto3" json:"jwtCookieName"`
	JwtSecret             database_sql.RawBytes `protobuf:"bytes,10,opt,name=jwt_secret,json=jwtSecret,proto3,customtype=database/sql.RawBytes" json:"jwt_secret" gorm:"type:tinyblob"`
	JwtSecretSalt         database_sql.RawBytes `protobuf:"bytes,12,opt,name=jwt_secret_salt,json=jwtSecretSalt,proto3,customtype=database/sql.RawBytes" json:"jwt_secret_salt" gorm:"type:tinyblob"`
	HstsOffload           bool                  `protobuf:"varint,11,opt,name=hsts_offload,json=hstsOffload,proto3" json:"hstsOffload"`
}

func (m *AppProxy) Reset()         { *m = AppProxy{} }
func (m *AppProxy) String() string { return proto.CompactTextString(m) }
func (*AppProxy) ProtoMessage()    {}
func (*AppProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9c739658c0ca6f6, []int{1}
}
func (m *AppProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppProxy.Unmarshal(m, b)
}
func (m *AppProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppProxy.Marshal(b, m, deterministic)
}
func (m *AppProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppProxy.Merge(m, src)
}
func (m *AppProxy) XXX_Size() int {
	return xxx_messageInfo_AppProxy.Size(m)
}
func (m *AppProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_AppProxy.DiscardUnknown(m)
}

var xxx_messageInfo_AppProxy proto.InternalMessageInfo

func (m *AppProxy) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AppProxy) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *AppProxy) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *AppProxy) GetInsecureSkipVerify() bool {
	if m != nil {
		return m.InsecureSkipVerify
	}
	return false
}

func (m *AppProxy) GetTransparentServerName() bool {
	if m != nil {
		return m.TransparentServerName
	}
	return false
}

func (m *AppProxy) GetJwtProvider() bool {
	if m != nil {
		return m.JwtProvider
	}
	return false
}

func (m *AppProxy) GetJwtCookieName() string {
	if m != nil {
		return m.JwtCookieName
	}
	return ""
}

func (m *AppProxy) GetHstsOffload() bool {
	if m != nil {
		return m.HstsOffload
	}
	return false
}

type AppRole struct {
	Model     `protobuf:"bytes,1,opt,name=model,proto3,embedded=model" json:",omitempty"`
	AppId     string         `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"appId" gorm:"type:char(36);not null" valid:"required"`
	Name      string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name" gorm:"type:varchar(50);" valid:"required"`
	Urls      []*AppProxyUrl `protobuf:"bytes,4,rep,name=urls,proto3,customtype=*AppProxyUrl" json:"-" gorm:"many2many:app_role_url" valid:"required"`
	UrlsId    []string       `protobuf:"bytes,5,rep,name=urlsId,proto3" json:"urls" gorm:"-"`
	Users     []*User        `protobuf:"bytes,6,rep,name=users,proto3,customtype=*User" json:"users" gorm:"-" valid:"required"`
	IsDefault bool           `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"isDefault,omitempty"`
}

func (m *AppRole) Reset()         { *m = AppRole{} }
func (m *AppRole) String() string { return proto.CompactTextString(m) }
func (*AppRole) ProtoMessage()    {}
func (*AppRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9c739658c0ca6f6, []int{2}
}
func (m *AppRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppRole.Unmarshal(m, b)
}
func (m *AppRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppRole.Marshal(b, m, deterministic)
}
func (m *AppRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppRole.Merge(m, src)
}
func (m *AppRole) XXX_Size() int {
	return xxx_messageInfo_AppRole.Size(m)
}
func (m *AppRole) XXX_DiscardUnknown() {
	xxx_messageInfo_AppRole.DiscardUnknown(m)
}

var xxx_messageInfo_AppRole proto.InternalMessageInfo

func (m *AppRole) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AppRole) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppRole) GetUrlsId() []string {
	if m != nil {
		return m.UrlsId
	}
	return nil
}

func (m *AppRole) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

type AppI18NOptions struct {
	DisplayName          map[string]string `protobuf:"bytes,1,rep,name=display_name,json=displayName,proto3" json:"displayName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description          map[string]string `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppI18NOptions) Reset()         { *m = AppI18NOptions{} }
func (m *AppI18NOptions) String() string { return proto.CompactTextString(m) }
func (*AppI18NOptions) ProtoMessage()    {}
func (*AppI18NOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9c739658c0ca6f6, []int{3}
}
func (m *AppI18NOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppI18NOptions.Unmarshal(m, b)
}
func (m *AppI18NOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppI18NOptions.Marshal(b, m, deterministic)
}
func (m *AppI18NOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppI18NOptions.Merge(m, src)
}
func (m *AppI18NOptions) XXX_Size() int {
	return xxx_messageInfo_AppI18NOptions.Size(m)
}
func (m *AppI18NOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_AppI18NOptions.DiscardUnknown(m)
}

var xxx_messageInfo_AppI18NOptions proto.InternalMessageInfo

func (m *AppI18NOptions) GetDisplayName() map[string]string {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

func (m *AppI18NOptions) GetDescription() map[string]string {
	if m != nil {
		return m.Description
	}
	return nil
}

type App struct {
	Model       `protobuf:"bytes,1,opt,name=model,proto3,embedded=model" json:",omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name" gorm:"type:varchar(50);not null;unique"`
	Description string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description" gorm:"type:varchar(200)"`
	Avatar      string            `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar" gorm:"type:varchar(128)"`
	GrantType   AppMeta_GrantType `protobuf:"varint,5,opt,name=grant_type,json=grantType,proto3,enum=idas.service.models.AppMeta_GrantType" json:"grantType" gorm:"type:TINYINT(3);not null;default:0"`
	GrantMode   AppMeta_GrantMode `protobuf:"varint,6,opt,name=grant_mode,json=grantMode,proto3,enum=idas.service.models.AppMeta_GrantMode" json:"grantMode" gorm:"type:TINYINT(3);not null;default:0"`
	Status      AppMeta_Status    `protobuf:"varint,7,opt,name=status,proto3,enum=idas.service.models.AppMeta_Status" json:"status" gorm:"type:TINYINT(3);not null;default:0"`
	Users       Users             `protobuf:"bytes,8,opt,name=users,proto3,customtype=Users" json:"users,omitempty" gorm:"-"`
	Roles       AppRoles          `protobuf:"bytes,9,opt,name=roles,proto3,customtype=AppRoles" json:"roles,omitempty" gorm:"-"`
	Proxy       *AppProxy         `protobuf:"bytes,10,opt,name=proxy,proto3" json:"proxy,omitempty" gorm:"-"`
	Url         string            `protobuf:"bytes,11,opt,name=url,proto3" json:"url" gorm:"type:varchar(200)"`
	DisplayName string            `protobuf:"bytes,12,opt,name=display_name,json=displayName,proto3" json:"displayName,omitempty" gorm:"type:varchar(128)"`
	Role        string            `protobuf:"bytes,13,opt,name=role,proto3" json:"role,omitempty" gorm:"-"`
	RoleId      string            `protobuf:"bytes,14,opt,name=role_id,json=roleId,proto3" json:"roleId,omitempty" gorm:"-"`
	I18N        *AppI18NOptions   `protobuf:"bytes,15,opt,name=i18n,proto3" json:"i18n,omitempty" gorm:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}
func (*App) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9c739658c0ca6f6, []int{4}
}
func (m *App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_App.Unmarshal(m, b)
}
func (m *App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_App.Marshal(b, m, deterministic)
}
func (m *App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_App.Merge(m, src)
}
func (m *App) XXX_Size() int {
	return xxx_messageInfo_App.Size(m)
}
func (m *App) XXX_DiscardUnknown() {
	xxx_messageInfo_App.DiscardUnknown(m)
}

var xxx_messageInfo_App proto.InternalMessageInfo

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *App) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *App) GetGrantType() AppMeta_GrantType {
	if m != nil {
		return m.GrantType
	}
	return AppMeta_none
}

func (m *App) GetGrantMode() AppMeta_GrantMode {
	if m != nil {
		return m.GrantMode
	}
	return AppMeta_manual
}

func (m *App) GetStatus() AppMeta_Status {
	if m != nil {
		return m.Status
	}
	return AppMeta_unknown
}

func (m *App) GetProxy() *AppProxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *App) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *App) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *App) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *App) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *App) GetI18N() *AppI18NOptions {
	if m != nil {
		return m.I18N
	}
	return nil
}

func init() {
	proto.RegisterType((*AppProxyUrl)(nil), "idas.service.models.AppProxyUrl")
	proto.RegisterType((*AppProxy)(nil), "idas.service.models.AppProxy")
	proto.RegisterType((*AppRole)(nil), "idas.service.models.AppRole")
	proto.RegisterType((*AppI18NOptions)(nil), "idas.service.models.AppI18nOptions")
	proto.RegisterMapType((map[string]string)(nil), "idas.service.models.AppI18nOptions.DescriptionEntry")
	proto.RegisterMapType((map[string]string)(nil), "idas.service.models.AppI18nOptions.DisplayNameEntry")
	proto.RegisterType((*App)(nil), "idas.service.models.App")
}

func init() { proto.RegisterFile("models/apps.proto", fileDescriptor_b9c739658c0ca6f6) }

var fileDescriptor_b9c739658c0ca6f6 = []byte{
	// 1402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcf, 0x52, 0x1b, 0x47,
	0x13, 0x47, 0xe8, 0x0f, 0xd2, 0x48, 0x80, 0x3d, 0xc6, 0x9f, 0xd7, 0xae, 0xef, 0xfb, 0x46, 0xb5,
	0x76, 0x1c, 0xe1, 0x18, 0x09, 0x44, 0xb0, 0x41, 0x24, 0xae, 0x42, 0xb1, 0xcb, 0x56, 0xa5, 0x00,
	0xd7, 0x82, 0x9d, 0x7f, 0x95, 0x52, 0x0d, 0xda, 0x01, 0x16, 0x56, 0xbb, 0xeb, 0x99, 0x59, 0x61,
	0x1d, 0x73, 0xcd, 0x29, 0xc7, 0x5c, 0xe3, 0x87, 0xc8, 0x33, 0xe4, 0xe8, 0x4b, 0x2e, 0xae, 0xd4,
	0x3e, 0xc0, 0x56, 0xe5, 0xc2, 0x13, 0xa4, 0x66, 0x66, 0x25, 0xad, 0x14, 0x89, 0x32, 0x89, 0x2f,
	0x96, 0xa7, 0xa7, 0x7f, 0xdd, 0xbd, 0xdd, 0xfd, 0xeb, 0x1e, 0xc0, 0xd5, 0xb6, 0x6b, 0x12, 0x9b,
	0x55, 0xb0, 0xe7, 0xb1, 0xb2, 0x47, 0x5d, 0xee, 0xc2, 0x6b, 0x96, 0x89, 0x59, 0x99, 0x11, 0xda,
	0xb1, 0x5a, 0xa4, 0xac, 0xee, 0x6f, 0x5d, 0x8b, 0xf4, 0xd4, 0x8f, 0xd2, 0xd4, 0x7f, 0x4d, 0x82,
	0xfc, 0x96, 0xe7, 0x3d, 0xa7, 0xee, 0xeb, 0xee, 0x0b, 0x6a, 0xc3, 0x67, 0x20, 0x2d, 0xef, 0xb5,
	0x44, 0x31, 0x51, 0xca, 0x57, 0x6f, 0x95, 0xc7, 0x58, 0x2a, 0x6f, 0x8b, 0x9f, 0xfa, 0x7f, 0x7e,
	0x0b, 0xd0, 0xd4, 0xdb, 0x00, 0x25, 0xc2, 0x00, 0x81, 0xfb, 0x6e, 0xdb, 0xe2, 0xa4, 0xed, 0xf1,
	0xae, 0xa1, 0x0c, 0xc0, 0x0d, 0x50, 0xc0, 0x9e, 0xd7, 0xf4, 0x84, 0xe5, 0xa6, 0x65, 0x6a, 0xd3,
	0xc5, 0x44, 0x29, 0x57, 0xbf, 0x11, 0x06, 0x28, 0xb1, 0x74, 0x1e, 0xa0, 0x39, 0xde, 0xf5, 0x48,
	0xad, 0x75, 0x8c, 0x69, 0x69, 0xf5, 0xc1, 0xe2, 0xa6, 0x01, 0x70, 0x14, 0x45, 0xc3, 0x84, 0xeb,
	0x20, 0xe5, 0xe0, 0x36, 0xd1, 0x92, 0x12, 0x72, 0x27, 0x0c, 0x90, 0x3c, 0x9f, 0x07, 0x48, 0x3b,
	0x72, 0x69, 0xbb, 0xa6, 0x4b, 0x6c, 0x07, 0x53, 0x09, 0x5f, 0x5b, 0x5e, 0xdc, 0xd4, 0x0d, 0xa9,
	0x01, 0x3f, 0x07, 0x99, 0x36, 0xe1, 0xc7, 0xae, 0xa9, 0xa5, 0x24, 0xf6, 0xa3, 0x30, 0x40, 0x91,
	0xe4, 0x3c, 0x40, 0x37, 0xc6, 0xa0, 0xd7, 0x05, 0x38, 0x52, 0x81, 0x6b, 0x20, 0xe9, 0x53, 0x5b,
	0x4b, 0x4b, 0xec, 0xed, 0x30, 0x40, 0xe2, 0x78, 0xa1, 0x5b, 0xa1, 0x00, 0x77, 0x40, 0xd6, 0xf7,
	0x18, 0xa7, 0x04, 0xb7, 0xb5, 0x8c, 0xc4, 0x56, 0xc3, 0x00, 0xc1, 0x9e, 0x6c, 0x90, 0x9b, 0x0b,
	0x4d, 0xf5, 0x6d, 0xc0, 0x05, 0x90, 0xb6, 0x1c, 0x93, 0xbc, 0xd6, 0x72, 0xc5, 0x44, 0x69, 0xd6,
	0x50, 0x87, 0x5a, 0xe1, 0xed, 0x2f, 0x68, 0xea, 0xa7, 0x37, 0x68, 0xea, 0xe7, 0x37, 0x68, 0x4a,
	0xff, 0x7d, 0x06, 0x64, 0x7b, 0x85, 0xfb, 0x80, 0x55, 0x7b, 0x06, 0x32, 0xa2, 0x6a, 0xfd, 0x7a,
	0xad, 0x84, 0x01, 0x4a, 0x63, 0xcf, 0x6b, 0x88, 0xfc, 0xdd, 0x89, 0xc5, 0xde, 0xaf, 0x9c, 0xef,
	0x58, 0xaf, 0x7c, 0xb2, 0xe9, 0xb8, 0xbc, 0xe8, 0xf8, 0xb6, 0xad, 0x1b, 0x4a, 0x1d, 0xee, 0x82,
	0x8c, 0xe9, 0xb6, 0xb1, 0xe5, 0x44, 0x65, 0x7c, 0x28, 0x4a, 0xa1, 0x24, 0xe7, 0x01, 0x5a, 0x9c,
	0x94, 0x86, 0x62, 0x07, 0xdb, 0x96, 0x59, 0xd3, 0x29, 0x79, 0xe5, 0x5b, 0x94, 0x98, 0xba, 0x11,
	0x81, 0xe0, 0x8b, 0x58, 0x96, 0x55, 0x75, 0x37, 0xc2, 0x00, 0xf5, 0x65, 0x97, 0x33, 0x3a, 0x48,
	0xf6, 0x73, 0x90, 0xf2, 0xa9, 0xcd, 0xa2, 0xa2, 0x7f, 0x26, 0xd2, 0xf3, 0x2e, 0x40, 0x85, 0x18,
	0x29, 0x98, 0x68, 0x40, 0xa1, 0x73, 0x1e, 0xa0, 0xff, 0x2a, 0x17, 0x87, 0x2e, 0x25, 0xd6, 0x91,
	0xf3, 0x25, 0xe9, 0xd6, 0xb6, 0xfa, 0x7d, 0xab, 0x1b, 0x52, 0x0b, 0x12, 0xb0, 0x60, 0x39, 0x8c,
	0xb4, 0x7c, 0x4a, 0x9a, 0xec, 0xd4, 0xf2, 0x9a, 0x1d, 0x42, 0xad, 0xc3, 0xae, 0x6c, 0x8d, 0x6c,
	0x7d, 0x55, 0xb4, 0x46, 0xef, 0x7e, 0xef, 0xd4, 0xf2, 0x5e, 0xca, 0xdb, 0xf3, 0x00, 0xdd, 0x54,
	0xb6, 0x7b, 0x99, 0xdc, 0x34, 0xc9, 0x21, 0xf6, 0x6d, 0x5e, 0x5b, 0xd6, 0x8d, 0x31, 0x00, 0xe8,
	0x80, 0x1b, 0x9c, 0x62, 0x87, 0x79, 0x98, 0x12, 0x87, 0x37, 0x45, 0xb5, 0x09, 0x6d, 0x4a, 0xe2,
	0xcc, 0x48, 0x4f, 0x0f, 0xc2, 0x00, 0x5d, 0x8f, 0xa9, 0xec, 0x49, 0x8d, 0x1d, 0xc5, 0xa4, 0x0b,
	0x9c, 0x8d, 0xc7, 0xc0, 0x2a, 0x28, 0x9c, 0x9c, 0x71, 0x41, 0xe8, 0x8e, 0x65, 0x12, 0xaa, 0x65,
	0xa5, 0x93, 0xf9, 0x30, 0x40, 0xf9, 0x93, 0x33, 0xfe, 0x3c, 0x12, 0x1b, 0xf1, 0x03, 0xdc, 0x00,
	0xf3, 0x02, 0xd3, 0x72, 0xdd, 0x53, 0x8b, 0xa8, 0xd8, 0x72, 0x32, 0xcf, 0x57, 0xc3, 0x00, 0xcd,
	0x9e, 0x9c, 0xf1, 0x2f, 0xe4, 0x8d, 0xb0, 0x6f, 0x0c, 0x1f, 0xe1, 0x3e, 0x00, 0x02, 0xca, 0x48,
	0x8b, 0x12, 0xae, 0x01, 0x89, 0x5a, 0x8b, 0xaa, 0x73, 0xdd, 0xc4, 0x1c, 0x1f, 0x60, 0x46, 0x2a,
	0xec, 0x95, 0x5d, 0x36, 0xf0, 0x59, 0xbd, 0xcb, 0x89, 0x28, 0xcf, 0x42, 0xac, 0x03, 0xb8, 0xe5,
	0x74, 0x0f, 0x6c, 0xf7, 0x40, 0x37, 0x72, 0x27, 0x67, 0x7c, 0x4f, 0xda, 0x81, 0xdf, 0xab, 0x80,
	0x94, 0xd5, 0x26, 0xc3, 0x36, 0xd7, 0x0a, 0xff, 0xc6, 0xf4, 0x6c, 0xdf, 0xf4, 0x1e, 0xb6, 0xb9,
	0xc8, 0xd1, 0x31, 0xe3, 0xac, 0xe9, 0x1e, 0x1e, 0xda, 0x2e, 0x36, 0xb5, 0xfc, 0x20, 0x47, 0x42,
	0xbe, 0xab, 0xc4, 0x46, 0xfc, 0x30, 0xc2, 0xeb, 0x1f, 0x53, 0x60, 0x66, 0xcb, 0xf3, 0x0c, 0xd7,
	0x26, 0x1f, 0x90, 0xd6, 0xc6, 0x08, 0xad, 0x37, 0xe3, 0xb4, 0x2e, 0x8f, 0xa3, 0x75, 0x9f, 0xcf,
	0x7f, 0xe7, 0x4e, 0x44, 0xf0, 0xc6, 0xd0, 0x94, 0x5e, 0x8b, 0x4d, 0xe9, 0x4b, 0xf0, 0x50, 0x8d,
	0xed, 0xef, 0x22, 0x0e, 0xa6, 0x8a, 0xc9, 0x52, 0xae, 0xfe, 0x54, 0xf0, 0xef, 0x5e, 0x8c, 0x80,
	0xbd, 0x9d, 0x11, 0x05, 0xda, 0xc6, 0x4e, 0xb7, 0x2a, 0xfe, 0xa9, 0x89, 0x6f, 0xa2, 0xae, 0x4d,
	0x9a, 0x3e, 0x1d, 0x17, 0xa8, 0xa2, 0xe3, 0x7d, 0x90, 0x11, 0xbf, 0x0d, 0x53, 0x4b, 0x4b, 0xf3,
	0x0b, 0x31, 0x3a, 0x67, 0x95, 0xc5, 0x25, 0xdd, 0x88, 0x74, 0xe0, 0x13, 0x90, 0xf6, 0x19, 0xa1,
	0x4c, 0xcb, 0x48, 0xe5, 0xca, 0xbb, 0x00, 0xa5, 0xef, 0xbd, 0x60, 0x84, 0x8a, 0x8c, 0xc9, 0x9b,
	0x01, 0x79, 0x96, 0xc6, 0x25, 0x47, 0xea, 0xc0, 0x07, 0x00, 0x58, 0xac, 0x19, 0x91, 0x2a, 0xe2,
	0xa3, 0xd8, 0x7d, 0xd7, 0x2c, 0xf6, 0x58, 0x09, 0x63, 0x45, 0xca, 0xf5, 0x85, 0x23, 0xcd, 0xf0,
	0xc7, 0x34, 0x98, 0xdb, 0xf2, 0xbc, 0xc6, 0xca, 0xba, 0xb3, 0xeb, 0x71, 0xcb, 0x75, 0x18, 0xa4,
	0xa0, 0x60, 0x5a, 0xcc, 0xb3, 0x71, 0x57, 0xd1, 0x29, 0x51, 0x4c, 0x96, 0xf2, 0xd5, 0x4f, 0xc7,
	0xb6, 0xc6, 0x30, 0xb4, 0xfc, 0x58, 0xe1, 0x04, 0xbb, 0x9e, 0x38, 0x9c, 0x76, 0xeb, 0x37, 0xc5,
	0x80, 0x30, 0x07, 0xd2, 0x58, 0x48, 0xf9, 0x98, 0x18, 0xbe, 0x04, 0x79, 0x93, 0xb0, 0x16, 0xb5,
	0xa4, 0x21, 0x6d, 0xfa, 0x12, 0x2e, 0x07, 0x30, 0xe9, 0xd2, 0x88, 0x1b, 0xba, 0xf5, 0x08, 0x5c,
	0x19, 0x8d, 0x09, 0x5e, 0x01, 0xc9, 0x53, 0xd2, 0x95, 0x1d, 0x9f, 0x33, 0xc4, 0x7f, 0xc5, 0x36,
	0xec, 0x60, 0xdb, 0x27, 0xaa, 0x75, 0x0d, 0x75, 0xa8, 0x4d, 0xaf, 0x27, 0x24, 0x7e, 0xc4, 0xc1,
	0x65, 0xf0, 0xfa, 0x9f, 0x39, 0x90, 0xdc, 0xf2, 0xbc, 0x0f, 0xc8, 0xb3, 0xa7, 0x11, 0x27, 0x14,
	0xcb, 0x56, 0x63, 0x9c, 0xf8, 0x78, 0x02, 0x27, 0xfa, 0x03, 0x58, 0xed, 0xd1, 0x1e, 0x23, 0xb6,
	0x87, 0x53, 0xae, 0x38, 0xf6, 0x89, 0x98, 0x23, 0x31, 0xf1, 0x84, 0xe7, 0x44, 0x75, 0x79, 0x79,
	0x51, 0x1f, 0xca, 0x34, 0x7c, 0x04, 0x32, 0xb8, 0x83, 0x39, 0xa6, 0xd1, 0xe6, 0xbc, 0x2b, 0x96,
	0xb1, 0x92, 0x4c, 0x30, 0xb2, 0x52, 0x5d, 0x5f, 0xd4, 0x8d, 0x48, 0x07, 0xfe, 0x90, 0x00, 0xe0,
	0x88, 0x62, 0x87, 0x37, 0x85, 0x92, 0xdc, 0x95, 0x73, 0xd5, 0xbb, 0x93, 0x3a, 0x60, 0x9b, 0x70,
	0x5c, 0x7e, 0x2a, 0xd4, 0xf7, 0xbb, 0x1e, 0xa9, 0xd7, 0xc2, 0x00, 0xe5, 0x8e, 0x7a, 0xc7, 0x91,
	0xf9, 0xb0, 0xdf, 0xd8, 0xf9, 0xa6, 0xb1, 0xb3, 0x5f, 0x5a, 0x8d, 0xa5, 0x22, 0xb6, 0x8b, 0x06,
	0xb8, 0x58, 0x0c, 0xc2, 0x93, 0xdc, 0xa6, 0xef, 0x15, 0x83, 0x28, 0x5c, 0x2c, 0x06, 0x71, 0xfc,
	0x27, 0x31, 0x08, 0x1c, 0xe4, 0x20, 0xc3, 0x38, 0xe6, 0x3e, 0x93, 0x94, 0x9e, 0xab, 0xde, 0xbe,
	0xd0, 0xfd, 0x9e, 0x54, 0x55, 0x2f, 0x1f, 0x05, 0xbb, 0x9c, 0xe3, 0x08, 0x04, 0xeb, 0xbd, 0x99,
	0x94, 0x95, 0xc5, 0xbb, 0x1f, 0xad, 0xaa, 0xb4, 0x18, 0x4b, 0xe2, 0x71, 0x32, 0x2f, 0x6f, 0x87,
	0x9e, 0x99, 0x83, 0xc1, 0x16, 0x0d, 0xa4, 0x27, 0x20, 0x2d, 0x26, 0x25, 0x8b, 0xf6, 0x6f, 0x25,
	0xb2, 0x91, 0x8d, 0x76, 0x8d, 0x34, 0x23, 0x15, 0x26, 0x99, 0x91, 0x97, 0x70, 0x1f, 0xa4, 0xe5,
	0x8b, 0x5e, 0x2e, 0xe4, 0x7c, 0xf5, 0x7f, 0x93, 0xbe, 0x5f, 0x8e, 0xee, 0x3a, 0x12, 0x56, 0xa5,
	0xfe, 0x24, 0xab, 0xf2, 0xb2, 0xf7, 0xee, 0xce, 0xbf, 0xcf, 0xbb, 0x5b, 0x75, 0xb7, 0x7c, 0x77,
	0x7f, 0x3d, 0x32, 0x0b, 0x0b, 0xfd, 0x4d, 0x34, 0x7e, 0xaa, 0x5d, 0xd8, 0xea, 0x43, 0x13, 0xaf,
	0x0a, 0x52, 0xe2, 0x7b, 0xb5, 0x59, 0x69, 0xf1, 0xff, 0x61, 0x80, 0xe6, 0xc4, 0x79, 0xc2, 0x57,
	0x48, 0x5d, 0xb8, 0x01, 0x66, 0xe4, 0x2e, 0xb2, 0x4c, 0x6d, 0x4e, 0xc2, 0x8a, 0x61, 0x80, 0xae,
	0x08, 0x51, 0xc3, 0x9c, 0x00, 0xcc, 0xa8, 0x5b, 0xf8, 0x15, 0x48, 0x59, 0x2b, 0xeb, 0x8e, 0x36,
	0x2f, 0x93, 0x7a, 0xfb, 0x3d, 0x26, 0xab, 0x8a, 0x49, 0x80, 0x26, 0xc5, 0x24, 0xee, 0x86, 0xd7,
	0x49, 0xfd, 0xe1, 0xb7, 0x6b, 0x47, 0x16, 0x3f, 0xf6, 0x0f, 0xca, 0x2d, 0xb7, 0x5d, 0xd9, 0xb6,
	0x5a, 0xd4, 0xdd, 0xf5, 0xd8, 0x52, 0xcb, 0xa9, 0x08, 0x87, 0x15, 0xef, 0xf4, 0xa8, 0x12, 0x39,
	0x8d, 0xfe, 0x48, 0xdc, 0x54, 0x3f, 0x07, 0x19, 0xf9, 0xc7, 0xe2, 0xea, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd0, 0x13, 0xec, 0xb9, 0x6b, 0x0e, 0x00, 0x00,
}
